// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_PRISMA_URL") // uses connection pooling
  directUrl = env("DATABASE_URL_NON_POOLING") // uses a direct connection
}

model HalfHour {
  id           Int           @id @default(autoincrement())
  period       String        @unique
  reservations Reservation[]
}

model OpenDate {
  id           Int           @id @default(autoincrement())
  date         DateTime      @unique
  reservations Reservation[]
}

/// Represents a reservation spot for a specific half hour on a specific date (10 places)
model Reservation {
  id                Int                 @id @default(autoincrement())
  halfHourId        Int
  openDateId        Int
  count             Int
  halfHour          HalfHour            @relation(fields: [halfHourId], references: [id])
  openDate          OpenDate            @relation(fields: [openDateId], references: [id])
  UniqueReservation UniqueReservation[]
}

/// Represents a unique reservation. This is used to cancel a reservation
model UniqueReservation {
  id            Int    @id @default(autoincrement())
  reservationId Int
  hash          String @unique

  reservation Reservation @relation(fields: [reservationId], references: [id])
}
